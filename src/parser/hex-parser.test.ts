import { describe, expect, it } from 'vitest';
import { HexParser } from './hex-parser.ts';

describe('bitwise-parser', () => {
  it('should parse BEEF', () => {
    const hex =
      '0100beef01fde803010100012979e097d2e838f2c42b70de19ac9e6814ba139e5a0a5e84671bb36d401f92300201000000012e3f4683e173b40a20527fe5719633ba070df649983614886e90e45aecf2ac56000000006a473044022058610441c199446e68254ddc76070ecf7ded0ad5c476efdb9b1a4d8ff79df09602203090ce5c01a1b45e4015632b629d3e9dfd9efc4bdcebc3f6f50137265b1a118a412102d0bef4aca8e09dca518025679d22cc61bbc980c0f2eaca3a7ca57b53892b86b6ffffffff0101000000000000001976a91457c13a6b752338d14875c42666610850b0143c7188ac00000000010001000000012979e097d2e838f2c42b70de19ac9e6814ba139e5a0a5e84671bb36d401f9230000000006b483045022100cc2875e595732b357ea0302b959b865f4a5d7b726bbbac8070198c8b047deb95022004deccaf1e851e7d37cde7e0a6db158822518e6c9e38ca4b057e6e8d8e149a20412102d0bef4aca8e09dca518025679d22cc61bbc980c0f2eaca3a7ca57b53892b86b6ffffffff0100000000000000001c006a0b68656c6c6f20776f726c6400000b68656c6c6f20776f726c640000000000';
    const parser = new HexParser();

    const parsed = parser.parseBEEF(hex);

    expect(parsed).toMatchSnapshot();
  });

  it('should parse BUMP', () => {
    const hex = 'fde803010100012979e097d2e838f2c42b70de19ac9e6814ba139e5a0a5e84671bb36d401f9230';
    const parser = new HexParser();

    const parsed = parser.parseBUMP(hex);

    expect(parsed).toMatchSnapshot();
  });

  it('should parse RawTx', () => {
    const hex =
      '01000000012e3f4683e173b40a20527fe5719633ba070df649983614886e90e45aecf2ac56000000006a473044022058610441c199446e68254ddc76070ecf7ded0ad5c476efdb9b1a4d8ff79df09602203090ce5c01a1b45e4015632b629d3e9dfd9efc4bdcebc3f6f50137265b1a118a412102d0bef4aca8e09dca518025679d22cc61bbc980c0f2eaca3a7ca57b53892b86b6ffffffff0101000000000000001976a91457c13a6b752338d14875c42666610850b0143c7188ac000000000100';
    const parser = new HexParser();

    const parsed = parser.parseRawTx(hex);

    expect(parsed).toMatchSnapshot();
  });
});
